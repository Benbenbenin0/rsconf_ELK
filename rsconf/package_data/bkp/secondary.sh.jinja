#!/bin/bash
set -euo pipefail

secondary_main() {
    umask 077
    local snap='{{ bkp.mirror_d }}/secondary_snap'
    local copy='{{ bkp.secondary_copy_d }}'
    rm -rf "$snap"
    cp -al '{{ bkp.mirror_d }}/current' "$snap"
    (
        # */* matches host.com/{var,etc,...} since these are
        # the first level to write
        cd "$snap" && find */* -type d -print0
    ) | while IFS= read -r -d $'\0' src_d; do
        dst_d="$copy/src_d"
        mkdir -p "$dst_d"
        if [[ ! $(find "$snap/$src_d" -maxdepth 1 ! -type d) ]]; then
            continue
        fi
        (
            # Just dump the file in to the dir since we aren't prefixing with the dir name
            # Ignore files with \ in them, because
            # tar: ./C:\Users
            # gold\Desktop\sweep1_a_1.mph: Cannot stat: No such file or directory
            # --text needed: since there are binary names to avoid:
            # Binary file (standard input) matches\n: Cannot stat: No such file or directory
            cd "$snap/$src_d"
            find . -maxdepth 1 ! -type d -print0 \
                | grep --text --null --null-data -v --perl-regexp '\\' \
                | tar --create --null --files-from=- --file=-
        ) | pxz -T8 -9 > "$dst_d"/0.txz
    done
    chmod -R a-w "$copy"
    {{ bkp.secondary_copy_unmount_cmds }}
}

secondary_main "$@"
